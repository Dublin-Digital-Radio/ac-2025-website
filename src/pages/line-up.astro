---
import Layout from "../layouts/Layout.astro";
import { artistListSchema } from "../api";
import PageContainer from "../components/PageContainer.astro";
import ArtistInfoModal from "../components/artist-info-modal/ArtistInfoModal.astro";
import ArtistInfoModalButton from "../components/artist-info-modal/ArtistInfoModalButton.astro";

import "../components/artist-info-modal/artist-info-modal.css";

const artists = await fetch(
  `${import.meta.env.API_SERVER}/api/artists?populate=*`
)
  .then((response) => response.json())
  .then((response) => artistListSchema.parse(response.data))
  .then((list) =>
    list.toSorted((a, b) => {
      if (a.name < b.name) {
        return -1;
      } else {
        return 1;
      }
    })
  );
---

<Layout>
  <PageContainer>
    {
      artists.map((artist) => (
        <div
          style={{
            "--image-url": `url(${import.meta.env.API_SERVER}${artist.image?.formats.medium.url})`,
          }}
          class:list={[
            "py-8 bg-center",
            {
              [`bg-[image:var(--image-url)]`]: Boolean(artist.image),
            },
          ]}
        >
          <ArtistInfoModalButton artist={artist}>
            <h2 class="pb-2">
              <span class="p-2 underline underline-offset-4 bg-[#009ee1]">
                {artist.name}
              </span>
            </h2>
          </ArtistInfoModalButton>
        </div>
      ))
    }
  </PageContainer>
</Layout>
<ArtistInfoModal />

<script>
  import { showArtistInfoModal } from "../components/artist-info-modal/artist-info-modal-controller";

  const artistInfoButtons = document.querySelectorAll(".artist-info-button");
  artistInfoButtons.forEach((artistInfoButton) => {
    if (artistInfoButton instanceof HTMLElement) {
      artistInfoButton.addEventListener("click", (event) => {
        event.preventDefault();

        if (artistInfoButton.dataset.artistName) {
          showArtistInfoModal({
            name: artistInfoButton.dataset.artistName,
            imageUrl: artistInfoButton.dataset.artistImageUrl,
            markdownDescription: artistInfoButton.dataset.artistDescription,
          });
        }
      });
    }
  });
</script>
